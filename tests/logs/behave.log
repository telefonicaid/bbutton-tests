Feature: Happy path E2E functionality Sync-Async # tests/features/happy_path.feature:1
  In order to check if a blackbutton that can order a product
  In a Service servi01 and Subservice testpizza
  As a client has ASYNC BlackButtons: button_aa_01 and button_as_02
  As a client has SYNC  BlackButtons: button_sa_03 and button_ss_04
  I should validate the ability of the platform to process the buttons requests to a third party
  @ft-happypath @hp-provision
  Scenario Outline: SC_1 Service and BlackButton get provisioned in BB-platform -- @1.1   # tests/features/happy_path.feature:80
    Given a Client of "servi0101" and a ThirdParty called "testpizza"                     # tests/steps/happy_path.py:40
    When the "ORC" receive the request "SERVICE" and action "CREATE"                      # tests/steps/happy_path.py:51
      | KEYSTONE_PROTOCOL          | http         |
      | KEYSTONE_HOST              | localhost    |
      | KEYSTONE_PORT              | 5000         |
      | DOMAIN_NAME                | admin_domain |
      | DOMAIN_ADMIN_USER          | cloud_admin  |
      | DOMAIN_ADMIN_PASSWORD      | password     |
      | NEW_SERVICE_NAME           | servi0101    |
      | NEW_SERVICE_DESCRIPTION    | servi0101    |
      | NEW_SERVICE_ADMIN_USER     | admin_bb     |
      | NEW_SERVICE_ADMIN_PASSWORD | 4passw0rd    |
      | KEYPASS_PROTOCOL           | http         |
      | KEYPASS_HOST               | localhost    |
      | KEYPASS_PORT               | 8080         |
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 72, in step_impl
          context.instance_port)
      TypeError: 'staticmethod' object is not callable

    Then subservice "testpizza" under the service is created                              # None
      | KEYSTONE_PROTOCOL          | http      |
      | KEYSTONE_HOST              | localhost |
      | KEYSTONE_PORT              | 5000      |
      | SERVICE_NAME               | servi0101 |
      | SERVICE_ADMIN_USER         | admin_bb  |
      | SERVICE_ADMIN_PASSWORD     | 4passw0rd |
      | NEW_SUBSERVICE_NAME        | testpizza |
      | NEW_SUBSERVICE_DESCRIPTION | testpizza |
    And the "ORC" receive the request "SERVICE_ENTITY" and action "CREATE"                # None
      | SERVICE_NAME          | <SERVICE>         |
      | SERVICE_USER_NAME     | admin_bb          |
      | SERVICE_USER_PASSWORD | 4passw0rd         |
      | SUBSERVICE_NAME       | testpizza         |
      | ENTITY_TYPE           | service           |
      | ENTITY_ID             | servi0101         |
      | SERVICE_NAME          | servi0101         |
      | ATT_NAME              | testpizza         |
      | ATT_PROVIDER          | QA Testpizza CORP |
      | PROTOCOL              | TT_BLACKBUTTON    |
      | ATT_ENDPOINT          | TP/async/create   |
      | ATT_METHOD            | POST              |
      | ATT_AUTHENTICATION    | context-adapter   |
      | ATT_MAPPING           | []                |
      | ATT_INTERACTION_TYPE  | asynchronous      |
      | ATT_TIMEOUT           | 120               |
    And device should get registered under service and subservice                         # None
      | KEYSTONE_PROTOCOL      | http            |
      | KEYSTONE_HOST          | localhost       |
      | KEYSTONE_PORT          | 5000            |
      | SERVICE_NAME           | servi0101       |
      | SUBSERVICE_NAME        | testpizza       |
      | SERVICE_ADMIN_USER     | admin_bb        |
      | SERVICE_ADMIN_PASSWORD | 4passw0rd       |
      | SERVICE_USER_NAME      | admin_bb        |
      | SERVICE_USER_PASSWORD  | 4passw0rd       |
      | DEVICE_ID              | button_aa_0101  |
      | PROTOCOL               | TT_BLACKBUTTON  |
      | ENTITY_TYPE            | BlackButton     |
      | ATT_CCID               | AAA             |
      | ATT_IMEI               | 1234567890      |
      | ATT_IMSI               | 0987654321      |
      | ATT_INTERACTION_TYPE   | asynchronous    |
      | ATT_SERVICE_ID         | servi0101       |
      | ATT_GEOLOCATION        | 40.4188,-3.6919 |
      | IOTA_PROTOCOL          | http            |
      | IOTA_HOST              | localhost       |
      | IOTA_PORT              | 4041            |
      | ORION_PROTOCOL         | http            |
      | ORION_HOST             | localhost       |
      | ORION_PORT             | 10026           |

  @ft-happypath @hp-provision
  Scenario Outline: SC_1 Service and BlackButton get provisioned in BB-platform -- @1.2   # tests/features/happy_path.feature:81
    Given a Client of "servi0102" and a ThirdParty called "testpizza"                     # tests/steps/happy_path.py:40
    When the "ORC" receive the request "SERVICE" and action "CREATE"                      # tests/steps/happy_path.py:51
      | KEYSTONE_PROTOCOL          | http         |
      | KEYSTONE_HOST              | localhost    |
      | KEYSTONE_PORT              | 5000         |
      | DOMAIN_NAME                | admin_domain |
      | DOMAIN_ADMIN_USER          | cloud_admin  |
      | DOMAIN_ADMIN_PASSWORD      | password     |
      | NEW_SERVICE_NAME           | servi0102    |
      | NEW_SERVICE_DESCRIPTION    | servi0102    |
      | NEW_SERVICE_ADMIN_USER     | admin_bb     |
      | NEW_SERVICE_ADMIN_PASSWORD | 4passw0rd    |
      | KEYPASS_PROTOCOL           | http         |
      | KEYPASS_HOST               | localhost    |
      | KEYPASS_PORT               | 8080         |
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 72, in step_impl
          context.instance_port)
      TypeError: 'staticmethod' object is not callable

    Then subservice "testpizza" under the service is created                              # None
      | KEYSTONE_PROTOCOL          | http      |
      | KEYSTONE_HOST              | localhost |
      | KEYSTONE_PORT              | 5000      |
      | SERVICE_NAME               | servi0102 |
      | SERVICE_ADMIN_USER         | admin_bb  |
      | SERVICE_ADMIN_PASSWORD     | 4passw0rd |
      | NEW_SUBSERVICE_NAME        | testpizza |
      | NEW_SUBSERVICE_DESCRIPTION | testpizza |
    And the "ORC" receive the request "SERVICE_ENTITY" and action "CREATE"                # None
      | SERVICE_NAME          | <SERVICE>         |
      | SERVICE_USER_NAME     | admin_bb          |
      | SERVICE_USER_PASSWORD | 4passw0rd         |
      | SUBSERVICE_NAME       | testpizza         |
      | ENTITY_TYPE           | service           |
      | ENTITY_ID             | servi0102         |
      | SERVICE_NAME          | servi0102         |
      | ATT_NAME              | testpizza         |
      | ATT_PROVIDER          | QA Testpizza CORP |
      | PROTOCOL              | TT_BLACKBUTTON    |
      | ATT_ENDPOINT          | TP/sync/request   |
      | ATT_METHOD            | POST              |
      | ATT_AUTHENTICATION    | context-adapter   |
      | ATT_MAPPING           | []                |
      | ATT_INTERACTION_TYPE  | synchronous       |
      | ATT_TIMEOUT           | 120               |
    And device should get registered under service and subservice                         # None
      | KEYSTONE_PROTOCOL      | http            |
      | KEYSTONE_HOST          | localhost       |
      | KEYSTONE_PORT          | 5000            |
      | SERVICE_NAME           | servi0102       |
      | SUBSERVICE_NAME        | testpizza       |
      | SERVICE_ADMIN_USER     | admin_bb        |
      | SERVICE_ADMIN_PASSWORD | 4passw0rd       |
      | SERVICE_USER_NAME      | admin_bb        |
      | SERVICE_USER_PASSWORD  | 4passw0rd       |
      | DEVICE_ID              | button_as_0102  |
      | PROTOCOL               | TT_BLACKBUTTON  |
      | ENTITY_TYPE            | BlackButton     |
      | ATT_CCID               | AAA             |
      | ATT_IMEI               | 1234567890      |
      | ATT_IMSI               | 0987654321      |
      | ATT_INTERACTION_TYPE   | asynchronous    |
      | ATT_SERVICE_ID         | servi0102       |
      | ATT_GEOLOCATION        | 40.4188,-3.6919 |
      | IOTA_PROTOCOL          | http            |
      | IOTA_HOST              | localhost       |
      | IOTA_PORT              | 4041            |
      | ORION_PROTOCOL         | http            |
      | ORION_HOST             | localhost       |
      | ORION_PORT             | 10026           |

  @ft-happypath @hp-provision
  Scenario Outline: SC_1 Service and BlackButton get provisioned in BB-platform -- @1.3   # tests/features/happy_path.feature:82
    Given a Client of "servi0103" and a ThirdParty called "testpizza"                     # tests/steps/happy_path.py:40
    When the "ORC" receive the request "SERVICE" and action "CREATE"                      # tests/steps/happy_path.py:51
      | KEYSTONE_PROTOCOL          | http         |
      | KEYSTONE_HOST              | localhost    |
      | KEYSTONE_PORT              | 5000         |
      | DOMAIN_NAME                | admin_domain |
      | DOMAIN_ADMIN_USER          | cloud_admin  |
      | DOMAIN_ADMIN_PASSWORD      | password     |
      | NEW_SERVICE_NAME           | servi0103    |
      | NEW_SERVICE_DESCRIPTION    | servi0103    |
      | NEW_SERVICE_ADMIN_USER     | admin_bb     |
      | NEW_SERVICE_ADMIN_PASSWORD | 4passw0rd    |
      | KEYPASS_PROTOCOL           | http         |
      | KEYPASS_HOST               | localhost    |
      | KEYPASS_PORT               | 8080         |
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 72, in step_impl
          context.instance_port)
      TypeError: 'staticmethod' object is not callable

    Then subservice "testpizza" under the service is created                              # None
      | KEYSTONE_PROTOCOL          | http      |
      | KEYSTONE_HOST              | localhost |
      | KEYSTONE_PORT              | 5000      |
      | SERVICE_NAME               | servi0103 |
      | SERVICE_ADMIN_USER         | admin_bb  |
      | SERVICE_ADMIN_PASSWORD     | 4passw0rd |
      | NEW_SUBSERVICE_NAME        | testpizza |
      | NEW_SUBSERVICE_DESCRIPTION | testpizza |
    And the "ORC" receive the request "SERVICE_ENTITY" and action "CREATE"                # None
      | SERVICE_NAME          | <SERVICE>         |
      | SERVICE_USER_NAME     | admin_bb          |
      | SERVICE_USER_PASSWORD | 4passw0rd         |
      | SUBSERVICE_NAME       | testpizza         |
      | ENTITY_TYPE           | service           |
      | ENTITY_ID             | servi0103         |
      | SERVICE_NAME          | servi0103         |
      | ATT_NAME              | testpizza         |
      | ATT_PROVIDER          | QA Testpizza CORP |
      | PROTOCOL              | TT_BLACKBUTTON    |
      | ATT_ENDPOINT          | TP/async/create   |
      | ATT_METHOD            | POST              |
      | ATT_AUTHENTICATION    | context-adapter   |
      | ATT_MAPPING           | []                |
      | ATT_INTERACTION_TYPE  | asynchronous      |
      | ATT_TIMEOUT           | 120               |
    And device should get registered under service and subservice                         # None
      | KEYSTONE_PROTOCOL      | http            |
      | KEYSTONE_HOST          | localhost       |
      | KEYSTONE_PORT          | 5000            |
      | SERVICE_NAME           | servi0103       |
      | SUBSERVICE_NAME        | testpizza       |
      | SERVICE_ADMIN_USER     | admin_bb        |
      | SERVICE_ADMIN_PASSWORD | 4passw0rd       |
      | SERVICE_USER_NAME      | admin_bb        |
      | SERVICE_USER_PASSWORD  | 4passw0rd       |
      | DEVICE_ID              | button_sa_0103  |
      | PROTOCOL               | TT_BLACKBUTTON  |
      | ENTITY_TYPE            | BlackButton     |
      | ATT_CCID               | AAA             |
      | ATT_IMEI               | 1234567890      |
      | ATT_IMSI               | 0987654321      |
      | ATT_INTERACTION_TYPE   | synchronous     |
      | ATT_SERVICE_ID         | servi0103       |
      | ATT_GEOLOCATION        | 40.4188,-3.6919 |
      | IOTA_PROTOCOL          | http            |
      | IOTA_HOST              | localhost       |
      | IOTA_PORT              | 4041            |
      | ORION_PROTOCOL         | http            |
      | ORION_HOST             | localhost       |
      | ORION_PORT             | 10026           |

  @ft-happypath @hp-provision
  Scenario Outline: SC_1 Service and BlackButton get provisioned in BB-platform -- @1.4   # tests/features/happy_path.feature:83
    Given a Client of "servi0104" and a ThirdParty called "testpizza"                     # tests/steps/happy_path.py:40
    When the "ORC" receive the request "SERVICE" and action "CREATE"                      # tests/steps/happy_path.py:51
      | KEYSTONE_PROTOCOL          | http         |
      | KEYSTONE_HOST              | localhost    |
      | KEYSTONE_PORT              | 5000         |
      | DOMAIN_NAME                | admin_domain |
      | DOMAIN_ADMIN_USER          | cloud_admin  |
      | DOMAIN_ADMIN_PASSWORD      | password     |
      | NEW_SERVICE_NAME           | servi0104    |
      | NEW_SERVICE_DESCRIPTION    | servi0104    |
      | NEW_SERVICE_ADMIN_USER     | admin_bb     |
      | NEW_SERVICE_ADMIN_PASSWORD | 4passw0rd    |
      | KEYPASS_PROTOCOL           | http         |
      | KEYPASS_HOST               | localhost    |
      | KEYPASS_PORT               | 8080         |
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 72, in step_impl
          context.instance_port)
      TypeError: 'staticmethod' object is not callable

    Then subservice "testpizza" under the service is created                              # None
      | KEYSTONE_PROTOCOL          | http      |
      | KEYSTONE_HOST              | localhost |
      | KEYSTONE_PORT              | 5000      |
      | SERVICE_NAME               | servi0104 |
      | SERVICE_ADMIN_USER         | admin_bb  |
      | SERVICE_ADMIN_PASSWORD     | 4passw0rd |
      | NEW_SUBSERVICE_NAME        | testpizza |
      | NEW_SUBSERVICE_DESCRIPTION | testpizza |
    And the "ORC" receive the request "SERVICE_ENTITY" and action "CREATE"                # None
      | SERVICE_NAME          | <SERVICE>         |
      | SERVICE_USER_NAME     | admin_bb          |
      | SERVICE_USER_PASSWORD | 4passw0rd         |
      | SUBSERVICE_NAME       | testpizza         |
      | ENTITY_TYPE           | service           |
      | ENTITY_ID             | servi0104         |
      | SERVICE_NAME          | servi0104         |
      | ATT_NAME              | testpizza         |
      | ATT_PROVIDER          | QA Testpizza CORP |
      | PROTOCOL              | TT_BLACKBUTTON    |
      | ATT_ENDPOINT          | TP/sync/request   |
      | ATT_METHOD            | POST              |
      | ATT_AUTHENTICATION    | context-adapter   |
      | ATT_MAPPING           | []                |
      | ATT_INTERACTION_TYPE  | synchronous       |
      | ATT_TIMEOUT           | 120               |
    And device should get registered under service and subservice                         # None
      | KEYSTONE_PROTOCOL      | http            |
      | KEYSTONE_HOST          | localhost       |
      | KEYSTONE_PORT          | 5000            |
      | SERVICE_NAME           | servi0104       |
      | SUBSERVICE_NAME        | testpizza       |
      | SERVICE_ADMIN_USER     | admin_bb        |
      | SERVICE_ADMIN_PASSWORD | 4passw0rd       |
      | SERVICE_USER_NAME      | admin_bb        |
      | SERVICE_USER_PASSWORD  | 4passw0rd       |
      | DEVICE_ID              | button_ss_0104  |
      | PROTOCOL               | TT_BLACKBUTTON  |
      | ENTITY_TYPE            | BlackButton     |
      | ATT_CCID               | AAA             |
      | ATT_IMEI               | 1234567890      |
      | ATT_IMSI               | 0987654321      |
      | ATT_INTERACTION_TYPE   | synchronous     |
      | ATT_SERVICE_ID         | servi0104       |
      | ATT_GEOLOCATION        | 40.4188,-3.6919 |
      | IOTA_PROTOCOL          | http            |
      | IOTA_HOST              | localhost       |
      | IOTA_PORT              | 4041            |
      | ORION_PROTOCOL         | http            |
      | ORION_HOST             | localhost       |
      | ORION_PORT             | 10026           |

  @ft-happypath @hp-provision-check
  Scenario Outline: SC_2 User check a BlackButton is registered in BB-platform -- @1.1   # tests/features/happy_path.feature:93
    Given a Client of "servi0101" and a ThirdParty called "testpizza"                    # tests/steps/happy_path.py:40
    And a valid token is retrieved for user "admin_bb" and password "4passw0rd"          # tests/steps/happy_path.py:222
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 234, in step_impl
          context.token = ks_get_token(context)
        File "/Users/usuario/github/bbutton-tests/tests/common/common.py", line 174, in ks_get_token
          return ks_headers["x-subject-token"]
        File "/Library/Python/2.7/site-packages/requests/structures.py", line 54, in __getitem__
          return self._store[key.lower()][1]
      KeyError: 'x-subject-token'
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    Then device "button_aa_0101" should be listed under service and subservice           # None

  @ft-happypath @hp-provision-check
  Scenario Outline: SC_2 User check a BlackButton is registered in BB-platform -- @1.2   # tests/features/happy_path.feature:94
    Given a Client of "servi0102" and a ThirdParty called "testpizza"                    # tests/steps/happy_path.py:40
    And a valid token is retrieved for user "admin_bb" and password "4passw0rd"          # tests/steps/happy_path.py:222
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 234, in step_impl
          context.token = ks_get_token(context)
        File "/Users/usuario/github/bbutton-tests/tests/common/common.py", line 174, in ks_get_token
          return ks_headers["x-subject-token"]
        File "/Library/Python/2.7/site-packages/requests/structures.py", line 54, in __getitem__
          return self._store[key.lower()][1]
      KeyError: 'x-subject-token'
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    Then device "button_as_0102" should be listed under service and subservice           # None

  @ft-happypath @hp-provision-check
  Scenario Outline: SC_2 User check a BlackButton is registered in BB-platform -- @1.3   # tests/features/happy_path.feature:95
    Given a Client of "servi0103" and a ThirdParty called "testpizza"                    # tests/steps/happy_path.py:40
    And a valid token is retrieved for user "admin_bb" and password "4passw0rd"          # tests/steps/happy_path.py:222
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 234, in step_impl
          context.token = ks_get_token(context)
        File "/Users/usuario/github/bbutton-tests/tests/common/common.py", line 174, in ks_get_token
          return ks_headers["x-subject-token"]
        File "/Library/Python/2.7/site-packages/requests/structures.py", line 54, in __getitem__
          return self._store[key.lower()][1]
      KeyError: 'x-subject-token'
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    Then device "button_sa_0103" should be listed under service and subservice           # None

  @ft-happypath @hp-provision-check
  Scenario Outline: SC_2 User check a BlackButton is registered in BB-platform -- @1.4   # tests/features/happy_path.feature:96
    Given a Client of "servi0104" and a ThirdParty called "testpizza"                    # tests/steps/happy_path.py:40
    And a valid token is retrieved for user "admin_bb" and password "4passw0rd"          # tests/steps/happy_path.py:222
      Traceback (most recent call last):
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1456, in run
          match.run(runner.context)
        File "/usr/local/lib/python2.7/site-packages/behave/model.py", line 1903, in run
          self.func(context, *args, **kwargs)
        File "tests/steps/happy_path.py", line 234, in step_impl
          context.token = ks_get_token(context)
        File "/Users/usuario/github/bbutton-tests/tests/common/common.py", line 174, in ks_get_token
          return ks_headers["x-subject-token"]
        File "/Library/Python/2.7/site-packages/requests/structures.py", line 54, in __getitem__
          return self._store[key.lower()][1]
      KeyError: 'x-subject-token'
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    Then device "button_ss_0104" should be listed under service and subservice           # None

  @ft-happypath @hp-button-flows @hp-async-flow
  Scenario Outline: SC_3 Client push the button in the ASYNC mode -- @1.1                                                          # tests/features/happy_path.feature:110
    Given a Client of "servi0101" and a ThirdParty called "testpizza"                                                              # tests/steps/happy_path.py:40
    And a button_request "#1,BT,C,1,1,2000$WakeUp,#0,K1,30$" for mode "asynchronous"                                               # tests/steps/happy_path.py:535
    When the button "button_aa_0101" is pressed in mode "asynchronous" the IOTA should receive the request                         # tests/steps/happy_path.py:440
      Assertion Failed: ERROR: MEASURE request IOTA failed: 500
      Captured stdout:
      #1,BT,C,1,1,2000$WakeUp,#0,K1,30$
      asynchronous
      500
      {}
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    Then the button "button_aa_0101" is pulling every "1" seconds during "10" times or until the IOTA request returns status "C.S" # None
    And the button "button_aa_0101" close the request and receive the final status "<FINAL_STATUS>"                                # None

  @ft-happypath @hp-button-flows @hp-async-flow
  Scenario Outline: SC_3 Client push the button in the ASYNC mode -- @1.2                                                          # tests/features/happy_path.feature:111
    Given a Client of "servi0102" and a ThirdParty called "testpizza"                                                              # tests/steps/happy_path.py:40
    And a button_request "#1,BT,C,3,2,2000$WakeUp,#0,K1,30$" for mode "asynchronous"                                               # tests/steps/happy_path.py:535
    When the button "button_as_0102" is pressed in mode "asynchronous" the IOTA should receive the request                         # tests/steps/happy_path.py:440
      Assertion Failed: ERROR: MEASURE request IOTA failed: 500
      Captured stdout:
      #1,BT,C,3,2,2000$WakeUp,#0,K1,30$
      asynchronous
      500
      {}
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    Then the button "button_as_0102" is pulling every "1" seconds during "10" times or until the IOTA request returns status "C.S" # None
    And the button "button_as_0102" close the request and receive the final status "<FINAL_STATUS>"                                # None

  @ft-happypath @hp-buttons-flows @hp-sync-flow
  Scenario Outline: SC_4 Client push the button in the SYNC mode -- @1.1                                  # tests/features/happy_path.feature:123
    Given a Client of "servi0103" and a ThirdParty called "testpizza"                                     # tests/steps/happy_path.py:40
    And a button_request "#1,BT,S,2,1,2000$WakeUp,#0,K1,30$" for mode "synchronous"                       # tests/steps/happy_path.py:535
    When the button "button_sa_0103" is pressed in mode "synchronous" the IOTA should receive the request # tests/steps/happy_path.py:485
      Assertion Failed: ERROR: MEASURE request IOTA failed: 500
      Captured stdout:
      #1,BT,S,2,1,2000$WakeUp,#0,K1,30$
      synchronous
      500
      {}
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    And the ThirdParty "TP" changed the status to "rgb-66CCDD%3Bt-2%3B"                                   # None

  @ft-happypath @hp-buttons-flows @hp-sync-flow
  Scenario Outline: SC_4 Client push the button in the SYNC mode -- @1.2                                  # tests/features/happy_path.feature:124
    Given a Client of "servi0104" and a ThirdParty called "testpizza"                                     # tests/steps/happy_path.py:40
    And a button_request "#3,BT,S,3,2,2000$WakeUp,#0,K1,30$" for mode "synchronous"                       # tests/steps/happy_path.py:535
    When the button "button_ss_0104" is pressed in mode "synchronous" the IOTA should receive the request # tests/steps/happy_path.py:485
      Assertion Failed: ERROR: MEASURE request IOTA failed: 500
      Captured stdout:
      #3,BT,S,3,2,2000$WakeUp,#0,K1,30$
      synchronous
      500
      {}
      
      Captured logging:
      INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1

    And the ThirdParty "TP" changed the status to "rgb-66CCDD%3Bt-2%3B"                                   # None

INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:qa:#>> PROPERTIES LOADED: [OK] 
INFO:qa:#>> INSTANCES LOADED: [OK] 
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): 127.0.0.1
